<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <title>{% block title %}Bienvenue Ã  Esprit{% endblock %}</title>

    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <link href="https://fonts.googleapis.com/css?family=Poppins:100,200,300,400,500,600,700,800,900" rel="stylesheet">

    {# Link to CSS files #}
    <link href="{{ asset('vendor1/bootstrap/css/bootstrap.min.css') }}" rel="stylesheet">
    <link rel="stylesheet" href="{{ asset('css/fontawesome.css') }}">
    <link rel="stylesheet" href="{{ asset('css/templatemo-edu-meeting.css') }}">
    <link rel="stylesheet" href="{{ asset('css/owl.css') }}">
    <link rel="stylesheet" href="{{ asset('css/lightbox.css') }}">

    <style>
        .header-sticky {
            position: fixed;
        }
    </style>
</head>

<body>
<link href="https://stackpath.bootstrapcdn.com/bootstrap/5/css/bootstrap.min.css" rel="stylesheet">
<script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@4.5.2/dist/js/bootstrap.bundle.min.js"></script>

{% include '/components/navbar.html.twig' %}
{% block body %}
    {% block content %}{% endblock %}
{% endblock %}


{# JavaScript files #}
<script src="{{ asset('vendor1/jquery/jquery.min.js') }}"></script>
<script src="{{ asset('vendor1/bootstrap/js/bootstrap.min.js') }}"></script>
<script src="{{ asset('js/isotope.min.js') }}"></script>
<script src="{{ asset('js/owl-carousel.js') }}"></script>
<script src="{{ asset('js/lightbox.js') }}"></script>
<script src="{{ asset('js/tabs.js') }}"></script>
<script src="{{ asset('js/video.js') }}"></script>
<script src="{{ asset('js/slick-slider.js') }}"></script>
<script src="{{ asset('js/custom.js') }}"></script>

<script>
    $(document).ready(function() {
        $('.nav li:first').addClass('active');

        var showSection = function(section, isAnimate) {
            var direction = section.replace(/#/, ''),
                reqSection = $('.section').filter('[data-section="' + direction + '"]'),
                reqSectionPos = reqSection.offset().top - $('.header-sticky').outerHeight();

            if (isAnimate) {
                $('html, body').animate({ scrollTop: reqSectionPos }, 800);
            } else {
                $('html, body').scrollTop(reqSectionPos);
            }
        };

        var checkSection = function() {
            $('.section').each(function() {
                var $this = $(this),
                    topEdge = $this.offset().top - 80,
                    bottomEdge = topEdge + $this.height(),
                    wScroll = $(window).scrollTop();

                if (topEdge < wScroll && bottomEdge > wScroll) {
                    var currentId = $this.data('section'),
                        reqLink = $('a').filter('[href*="#' + currentId + '"]');
                    reqLink.closest('li').addClass('active').siblings().removeClass('active');
                }
            });
        };

        $('.main-menu, .responsive-menu, .scroll-to-section').on('click', 'a', function(e) {
            e.preventDefault();
            showSection($(this).attr('href'), true);
        });

        $(window).scroll(function() {
            checkSection();
        });
    });
</script>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Loop through flash messages and create toasts
        {% for type, messages in app.session.flashbag.all() %}
        {% for message in messages %}
        showToast('{{ type }}', '{{ message }}');
        {% endfor %}
        {% endfor %}
    });

    // Function to show toast notifications
    function showToast(type, message) {
        const toastContainer = document.getElementById('toast-container');
        const toast = document.createElement('div');
        toast.classList.add('toast');
        toast.classList.add('align-items-center');
        toast.classList.add('text-white');
        toast.classList.add('border-0');
        toast.classList.add('mb-3');
        toast.classList.add('shadow-sm');
        toast.setAttribute('role', 'alert');
        toast.setAttribute('aria-live', 'assertive');
        toast.setAttribute('aria-atomic', 'true');

        // Set the toast's background color based on the type
        if (type === 'success') {
            toast.classList.add('bg-success');
        } else if (type === 'error') {
            toast.classList.add('bg-danger');
        } else if (type === 'warning') {
            toast.classList.add('bg-warning');
        } else if (type === 'info') {
            toast.classList.add('bg-info');
        }

        // Add the toast's content with some padding
        toast.innerHTML = `
                <div class="d-flex">
                    <div class="toast-body p-3">
                        <strong>${message}</strong>
                    </div>
                    <button type="button" class="btn-close btn-close-white ms-2" data-bs-dismiss="toast" aria-label="Close"></button>
                </div>
            `;

        // Append toast to container
        toastContainer.appendChild(toast);

        // Show the toast (via Bootstrap's Toast API)
        const toastInstance = new bootstrap.Toast(toast);
        toastInstance.show();

        // Automatically hide the toast after 5 seconds
        setTimeout(function () {
            toastInstance.hide();
        }, 5000);
    }
</script>

</body>
</html>