{% extends 'layout_dashboared.html.twig' %}

{% block title %}Dashboard - Analytics{% endblock %}

{% block content %}
    <div class="content-body">
        <div class="container-fluid">
            <div class="row page-titles mx-0">
                <div class="col-sm-6 p-md-0">
                    <div class="welcome-text">
                        <h3>Events Calendar</h3>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-lg-9">
                    <div class="card">
                        <div class="card-body">
                            <div id="calendar" class="d-block"></div>
                            <div id="non-valid-events" class="d-none">
                                <h4>List of Non-Validated Events</h4>
                                <ul class="list-group" id="nonValidEventList">
                                    {% for event in evenements %}
                                        {% if not event.valider %}
                                            {% if not event.refuser %}
                                                <li class="list-group-item non-valid-event" data-event-id="{{ event.id }}" data-event-title="{{ event.titreevets }}" data-event-start="{{ event.dateDebut|date('Y-m-d H:i') }}" data-event-end="{{ event.dateFin|date('Y-m-d H:i') }}" data-event-lieu="{{ event.lieu }}">
                                                    <strong>{{ event.titreevets }}</strong><br>
                                                    Start: {{ event.dateDebut|date('Y-m-d H:i') }}<br>
                                                    End: {{ event.dateFin|date('Y-m-d H:i') }}<br>
                                                    Location: {{ event.lieu }}
                                                </li>
                                            {% endif %}
                                        {% endif %}
                                    {% endfor %}
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-lg-3">
                    <div class="card">
                        <div class="card-body">
                            <h4 class="card-intro-title">Calendar</h4>
                            <div class="my-3">
                                <h5 class="mt-4">Legend</h5>
                                <ul class="list-unstyled">
                                    <li><span class="badge bg-primary">&nbsp;</span> Sport</li>
                                    <li><span class="badge bg-danger">&nbsp;</span> Tech</li>
                                    <li><span class="badge bg-success">&nbsp;</span> Loisir</li>
                                    <li><span class="badge bg-warning">&nbsp;</span> IT</li>
                                    <li><span class="badge bg-info">&nbsp;</span> Workshop</li>
                                    <li><span class="badge bg-pink" style="background-color: #FF1493;">&nbsp;</span> Relation d'Affaires</li>
                                    <li><span class="badge bg-secondary">&nbsp;</span> Autre</li>
                                    <br>
                                    <li>
                                        <button id="toggle-view-btn" class="btn btn-outline-dark">Non-Valid Events</button>
                                    </li>
                                    <li>
                                        <button id="add-event-btn" class="btn btn-primary mt-3" data-bs-toggle="modal" data-bs-target="#addEventModal">Add Event</button>
                                    </li>

                                </ul>
                                <div id="eventsListContainer" class="mt-4"></div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="modal fade" id="addEventModal" tabindex="-1" aria-labelledby="addEventModalLabel" aria-hidden="true">
                    <div class="modal-dialog modal-lg">
                        <div class="modal-content">
                            <!-- Header -->
                            <div class="modal-header bg-primary text-white" >
                                <h5 class="modal-title fw-bold align-content-lg-center" id="addEventModalLabel" style="color: black">
                                    <i class="bx bx-calendar-event me-2"></i> Add New Event
                                </h5>
                                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                            </div>

                            <!-- Body -->
                            <div class="modal-body p-5">
                                {{ form_start(form, {'attr': {'id': 'addEventForm', 'enctype': 'multipart/form-data'}}) }}
                                <div class="row">
                                    <div class="col-md-6 mb-4">
                                        {{ form_label(form.titreevets, 'Title', {'label_attr': {'class': 'form-label font-weight-bold'}}) }}
                                        {{ form_widget(form.titreevets, {'attr': {'class': 'form-control form-control-lg'}}) }}
                                        <div class="text-danger">{{ form_errors(form.titreevets) }}</div>
                                    </div>
                                    <div class="col-md-6 mb-4">
                                        {{ form_label(form.lieu, 'Location', {'label_attr': {'class': 'form-label font-weight-bold'}}) }}
                                        {{ form_widget(form.lieu, {'attr': {'class': 'form-control form-control-lg'}}) }}
                                        <div class="text-danger">{{ form_errors(form.lieu) }}</div>
                                    </div>
                                    <div class="col-md-6 mb-4">
                                        {{ form_label(form.date_debut, 'Start Date', {'label_attr': {'class': 'form-label font-weight-bold'}}) }}
                                        {{ form_widget(form.date_debut, {'attr': {'class': 'form-control form-control-lg'}}) }}
                                        <div class="text-danger">{{ form_errors(form.date_debut) }}</div>
                                    </div>
                                    <div class="col-md-6 mb-4">
                                        {{ form_label(form.date_fin, 'End Date', {'label_attr': {'class': 'form-label font-weight-bold'}}) }}
                                        {{ form_widget(form.date_fin, {'attr': {'class': 'form-control form-control-lg'}}) }}
                                        <div class="text-danger">{{ form_errors(form.date_fin) }}</div>
                                    </div>
                                    <div class="col-md-6 mb-4">
                                        {{ form_label(form.type_events, 'Event Type', {'label_attr': {'class': 'form-label font-weight-bold'}}) }}
                                        {{ form_widget(form.type_events, {'attr': {'class': 'form-control form-control-lg'}}) }}
                                        <div class="text-danger">{{ form_errors(form.type_events) }}</div>
                                    </div>
                                    <div class="col-md-6 mb-4">
                                        {{ form_label(form.nombre_participants_max, 'Number of Places', {'label_attr': {'class': 'form-label font-weight-bold'}}) }}
                                        {{ form_widget(form.nombre_participants_max, {'attr': {'class': 'form-control form-control-lg'}}) }}
                                        <div class="text-danger">{{ form_errors(form.nombre_participants_max) }}</div>
                                    </div>
                                    <div class="col-md-6 mb-4">
                                        {{ form_label(form.image, 'Event Image', {'label_attr': {'class': 'form-label font-weight-bold'}}) }}
                                        <div class="image-upload-wrapper" style="border: 2px dashed #ccc; border-radius: 12px; padding: 20px; text-align: center; cursor: pointer; position: relative;">
                                            <i class="fas fa-upload fa-2x mb-2"></i>
                                            <p>Click or drag image here to upload</p>
                                            {{ form_widget(form.image, {'attr': {'class': 'form-control-file', 'style': 'opacity: 0; position: absolute; top: 0; left: 0; width: 100%; height: 100%; cursor: pointer;'}}) }}
                                            <div id="imagePreview" class="mt-3"></div>
                                        </div>
                                        <div class="text-danger mt-2">{{ form_errors(form.image) }}</div>
                                    </div>
                                    <div class="col-md-6 mb-4">
                                        {{ form_label(form.description, 'Description', {'label_attr': {'class': 'form-label font-weight-bold'}}) }}
                                        {{ form_widget(form.description, {'attr': {'class': 'form-control form-control-lg'}}) }}
                                        <div class="text-danger">{{ form_errors(form.description) }}</div>
                                    </div>
                                </div>
                                <div class="text-end">
                                    <button type="submit" class="btn btn-primary btn-lg w-100" id="addEventButton">
                                        <i class="bx bx-check me-1"></i> Add Event
                                    </button>
                                </div>
                                {{ form_end(form) }}
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Modal for Validation or Annulation -->
                <div class="modal fade" id="validateDeleteModal" tabindex="-1" aria-labelledby="validateDeleteModalLabel" aria-hidden="true">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title" id="validateDeleteModalLabel">Validate or Cancel Event</h5>
                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                            </div>
                            <div class="modal-body">
                                <p id="eventDetails"></p>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-success" id="validateEventBtn">Validate</button>
                                <button type="button" class="btn btn-danger" id="cancelEventBtn">Cancel Event</button>
                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
<style>


</style>
    <!-- FullCalendar and JavaScript -->
    <link href='https://cdn.jsdelivr.net/npm/fullcalendar@6.1.15/main.min.css' rel='stylesheet' />
    <script src='https://cdn.jsdelivr.net/npm/fullcalendar@6.1.15/index.global.min.js'></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const imageInput = document.querySelector('#addEventForm input[type="file"]');
            const imagePreview = document.getElementById('imagePreview');

            imageInput.addEventListener('change', function(event) {
                const file = event.target.files[0];
                if (file) {
                    const reader = new FileReader();
                    reader.onload = function(e) {
                        imagePreview.innerHTML = `<img src="${e.target.result}" alt="Selected Image" class="img-fluid rounded" style="max-width: 100%; height: auto; border-radius: 12px;">`;
                    }
                    reader.readAsDataURL(file);
                } else {
                    imagePreview.innerHTML = '';
                }
            });
        });
        document.addEventListener('DOMContentLoaded', function() {
            const form = document.getElementById('addEventForm');
            const addEventModal = new bootstrap.Modal(document.getElementById('addEventModal'));

            form.addEventListener('submit', function(event) {
                setTimeout(function() {
                    const hasErrors = Array.from(form.querySelectorAll('.text-danger')).some(errorDiv => errorDiv.textContent.trim() !== '');
                    if (hasErrors) {
                        addEventModal.show();
                    }
                }, 100);
            });

            window.addEventListener('load', function() {
                const hasErrors = Array.from(form.querySelectorAll('.text-danger')).some(errorDiv => errorDiv.textContent.trim() !== '');
                if (hasErrors) {
                    addEventModal.show();
                }
            });

        });
        document.addEventListener('DOMContentLoaded', function() {
            var calendarEl = document.getElementById('calendar');
            var calendar = new FullCalendar.Calendar(calendarEl, {
                initialView: 'dayGridMonth',
                themeSystem: 'bootstrap',
                headerToolbar: {
                    left: 'prev,next today',
                    center: 'title',
                    right: 'dayGridMonth,timeGridWeek,timeGridDay,listWeek'
                },
                droppable: true,
                selectable: true,
                dayMaxEvents: true,
                events: [
                    {% for event in evenements %}
                    {% if event.valider %}
                    {
                        id: '{{ event.id }}',
                        title: '{{ event.titreevets }}',
                        start: '{{ event.dateDebut|date('Y-m-d') }}',
                        end: '{{ event.dateFin|date_modify('+1 day')|date('Y-m-d') }}',
                        url: '{{ path('app_evenement_show', { 'id': event.id }) }}',
                        backgroundColor:
                                {% if event.typeEvents == 'sport' %}'#b71c1c'
                        {% elseif event.typeEvents == 'tech' %}'#b71c1c'
                        {% elseif event.typeEvents == 'loisir' %}'#71dd37'
                        {% elseif event.typeEvents == 'it' %}'#ffab00'
                        {% elseif event.typeEvents == 'workshop' %}'#03c3ec'
                        {% elseif event.typeEvents == 'entrepreunariat' %}'#ff1493'
                        {% else %}'#8592a3'
                        {% endif %},
                        borderColor:
                                {% if event.typeEvents == 'sport' %}'#b71c1c'
                        {% elseif event.typeEvents == 'tech' %}'#b71c1c'
                        {% elseif event.typeEvents == 'loisir' %}'#71dd37'
                        {% elseif event.typeEvents == 'it' %}'#ffab00'
                        {% elseif event.typeEvents == 'workshop' %}'#03c3ec'
                        {% elseif event.typeEvents == 'relation' %}'#ff1493'
                        {% else %}'#8592a3'
                        {% endif %},
                        textColor: '#FFFFFF'
                    },
                    {% endif %}
                    {% endfor %}
                ],
                editable: true,
                eventDrop: function(info) {
                    const today = new Date();
                    today.setHours(0, 0, 0, 0);
                    today.setDate(today.getDate()+1)
                    console.log(today)
                    if (info.event.start < today ) {
                        const modalHTML = `
<div class="modal fade " id="pastDateModal" tabindex="-1" aria-labelledby="pastDateModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header bg-primary align-content-lg-center">
        <h5 class="modal-title  " id="pastDateModalLabel" style="color: black">Invalid Action</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
       <h4>You cannot move an event to a past date.</h4>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">OK</button>
      </div>
    </div>
  </div>
</div>
`;
                        document.body.insertAdjacentHTML('afterend', modalHTML);

                        const pastDateModal = new bootstrap.Modal(document.getElementById('pastDateModal'));
                        pastDateModal.show();
                        info.revert();


                    }
                    else {
                        updateEventDate(info.event);

                    }                }
            });
            calendar.render();

            function updateEventDate(event) {
                const eventId = event.id;
                const newStart = event.start.toISOString();
                const newEnd = event.end.toISOString();

                fetch(`/dashboared/evenement/event/update/${eventId}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest',
                        'X-CSRF-TOKEN': '{{ csrf_token("update_event") }}'
                    },
                    body: JSON.stringify({
                        start: newStart,
                        end: newEnd
                    })
                })
                    .then(data => location.reload());
            }

            var toggleBtn = document.getElementById('toggle-view-btn');
            var calendarContainer = document.getElementById('calendar');
            var nonValidEventsContainer = document.getElementById('non-valid-events');

            toggleBtn.addEventListener('click', function() {
                if (calendarContainer.classList.contains('d-block')) {
                    calendarContainer.classList.remove('d-block');
                    calendarContainer.classList.add('d-none');
                    nonValidEventsContainer.classList.remove('d-none');
                    nonValidEventsContainer.classList.add('d-block');
                    toggleBtn.innerText = 'Show Calendar';
                } else {
                    calendarContainer.classList.remove('d-none');
                    calendarContainer.classList.add('d-block');
                    nonValidEventsContainer.classList.remove('d-block');
                    nonValidEventsContainer.classList.add('d-none');
                    toggleBtn.innerText = 'Show List of Non-Valid Events';
                }
            });

            // Event Click handling for Non-Validated Events
            document.querySelectorAll('.non-valid-event').forEach(function(item) {
                item.addEventListener('click', function() {
                    var eventId = item.getAttribute('data-event-id');
                    var eventTitle = item.getAttribute('data-event-title');
                    var eventStart = item.getAttribute('data-event-start');
                    var eventEnd = item.getAttribute('data-event-end');
                    var eventLieu = item.getAttribute('data-event-lieu');

                    var eventDetails = `Title: ${eventTitle}<br>Start: ${eventStart}<br>End: ${eventEnd}<br>Location: ${eventLieu}`;
                    document.getElementById('eventDetails').innerHTML = eventDetails;

                    var validateDeleteModal = new bootstrap.Modal(document.getElementById('validateDeleteModal'));
                    validateDeleteModal.show();

                    document.getElementById('validateEventBtn').onclick = function() {
                        fetch(`{{ path('app_evenement_validate', {'id': 0}) }}`.replace('0', eventId), {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                                'X-Requested-With': 'XMLHttpRequest',
                                'X-CSRF-TOKEN': '{{ csrf_token("validate_event") }}'
                            },
                            body: JSON.stringify({ valider: true })
                        })
                            .then(response => {
                                if (!response.ok) {
                                    throw new Error('Network response was not ok');
                                }
                                return response.json();
                            })
                            .then(data => location.reload())
                            .catch(error => {
                                console.error('Error:', error);
                                alert('An error occurred while validating the event. Please try again later.');
                            });
                    };

                    document.getElementById('cancelEventBtn').onclick = function() {
                        fetch(`{{ path('app_evenement_Annuler', {'id': 0}) }}`.replace('0', eventId), {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                                'X-Requested-With': 'XMLHttpRequest',
                                'X-CSRF-TOKEN': '{{ csrf_token("annuler_event") }}'
                            },
                            body: JSON.stringify({ refuser: true })
                        })
                            .then(response => {
                                if (!response.ok) {
                                    throw new Error('Network response was not ok');
                                }
                                return response.json();
                            })
                            .then(data => location.reload())
                            .catch(error => {
                                console.error('Error:', error);
                                alert('An error occurred while cancelling the event. Please try again later.');
                            });
                    };
                });
            });
        });
    </script>
{% endblock %}
